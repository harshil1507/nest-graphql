# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Post {
  id: Int!
  title: String!
  votes: Int
  date: Date!
}

"""Custom scalar for Date"""
scalar Date

type Author {
  id: Int!
  firstName: String
  lastName: String
  posts: [Post]
  next: Int
  prev: Int
}

input PostInput {
  id: Int!
  title: String!
  votes: Int
  date: Date!
}

input AuthorInput {
  id: Int!
  firstName: String
  lastName: String
  posts: [PostInput]
  next: Int
  prev: Int
}

type Query {
  """can go both ways specify true for normal, false for reverse"""
  pagination(limit: Int, cursor: Int, ascending: Boolean): [Author!]!

  """
  will automatically start from the first element that was inserted and with a default limit of 2. both the starting point and limit cna be passed as args
  """
  autoPage(limit: Int, cursor: Int): [Author!]!
  author(id: Int!): Author!
  getAllAuthors: [Author!]!
  posts: [Post!]!
  getAuthors(limit: Int, cursor: Int): [Author!]!
}

type Mutation {
  addAuthor(lastName: String, firstName: String!, id: Int!): Author!
  upvotePost(id: Int!): Post!
  AddPost(date: Date!, votes: Int!, title: String!, id: Int!): Post!
}
